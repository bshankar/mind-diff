* Header
** meta
   - you can configure sitelinks in Google webmaster tools.
   - og:image, og:title ..., twitter:title, ...

   #+BEGIN_SRC html
   <meta charset="utf-8">
   <meta name="author" content="Me">
   <meta name="description" content="Contains a lot of stuff related to something">
   #+END_SRC

** favicon
   - favicon headers of MDN

   #+BEGIN_SRC html
   <!-- third-generation iPad with high-resolution Retina display: -->
   <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://developer.cdn.mozilla.net/static/img/favicon144.a6e4162070f4.png">
   <!-- iPhone with high-resolution Retina display: -->
   <link rel="apple-touch-icon-precomposed" sizes="114x114" href="https://developer.cdn.mozilla.net/static/img/favicon114.0e9fabd44f85.png">
   <!-- first- and second-generation iPad: -->
   <link rel="apple-touch-icon-precomposed" sizes="72x72" href="https://developer.cdn.mozilla.net/static/img/favicon72.8ff9d87c82a0.png">
   <!-- non-Retina iPhone, iPod Touch, and Android 2.1+ devices: -->
   <link rel="apple-touch-icon-precomposed" href="https://developer.cdn.mozilla.net/static/img/favicon57.a2490b9a2d76.png">
   <!-- basic favicon -->
   <link rel="shortcut icon" href="https://developer.cdn.mozilla.net/static/img/favicon32.e02854fdcf73.png">
   #+END_SRC

** CSS and JS
   #+BEGIN_SRC html
   <link rel="stylesheet" href="my-css-file.css">
   <!-- Can be placed in header but not a good practice -->
   <!-- Best to place at the closing of body tag -->
   <script src="my-js-file.js"></script>
   #+END_SRC

** Language of the document
   - [[https://www.w3.org/International/articles/language-tags/][More about languages]]
   #+BEGIN_SRC html
   <html lang="en-US">
   <p>Japanese example: <span lang="jp">ご飯が熱い。</span>.</p>
   #+END_SRC

* Text
** Structured hierarchy
   - In a story
     - h1 -> title of story
     - h2 -> title of each chapter
     - h3 -> subsections of each chapter ...

   - A structuring should make sense.

*** Best practices
    - One h1 at the top of page and everything below this in hierarchy.
    - Maintain order: E.g. do not use h3 for subheadings, h2 for
      subsubheadings

** Semantics
   - it is important. so use actual headings though we can create some
     things which look like headings

     #+BEGIN_SRC html
     <span style="font-size: 32px; margin: 21px 0;">Is this a top level heading?</span>
     #+END_SRC

   - Span has no semantic meaning. It is used to wrap content and
     apply some CSS or Js to it.

** Emphasis
   - =<em>= makes inside italic, =<strong>= makes text bold. (by default)
   #+BEGIN_SRC html
   <p>I am <em>glad</em> you weren't <em>late</em>.</p>
   <p>This liquid is <strong>highly toxic</strong>.</p>
   #+END_SRC

*** Italic, bold, underline
    - /Presentation elements/ =<i>=, =<b>=, =<u>= were created to write styled text when css wasn't
      supported.
    - Do not use underlines as people associate them with hyperlinks.

* Hyperlinks
  - title is only visible on hover

  #+BEGIN_SRC html
  <p>I'm creating a link to
  <a href="https://www.mozilla.org/en-US/"
  title="The best place to find more information about Mozilla's
  mission and how to contribute">the Mozilla homepage</a>.
  </p>

  <!-- Turning an image into a link -->
  <a href="https://www.mozilla.org/en-US/">
    <img src="mozilla-image.png" alt="mozilla logo that links to the mozilla homepage">
  </a>
  #+END_SRC

** URLs and Paths
   - Refer [[file:getting_started.org::24][Getting started #files]] (relative URLs)
   - Absolute URLs
   - Use clear wording. /NO/ `click here` and stuff.
   - Use relative links wherever possible
     (Shorter and no need of DNS look-ups)

   - For non-html resources, leave clear sign posts
   - Use download attribute for download links

     #+BEGIN_SRC html
     <p><a href="http://www.example.com/large-report.pdf">
       Download the sales report (PDF, 10MB)
     </a></p>

     <p><a href="http://www.example.com/video-stream/">
       Watch the video (stream opens in separate tab, HD quality)
     </a></p>

     <p><a href="http://www.example.com/car-game">
       Play the car game (requires Flash)
     </a></p>

     <a href="https://download.mozilla.org/?product=firefox-39.0-SSL&os=win&lang=en-US"
     download="firefox-39-installer.exe">
     Download Firefox 39 for Windows
     </a>
     #+END_SRC

** Email links
   - The value of each field must be [[http://en.wikipedia.org/wiki/Percent-encoding][URL encoded]].

   #+BEGIN_SRC html
   <a href="mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&bcc=name3@rapidtables.com&subject=The%20subject%20of%20the%20email&body=The%20body%20of%20the%20email">
   Send mail with cc, bcc, subject and body
   </a>
   #+END_SRC

* Advanced text formatting
** Description lists
   - =<dt>= description term, =<dd>= description definition
   - dts are embolden and dds are a bit indented w.r.t dts.

   #+BEGIN_SRC html
   <dl>
     <dt>soliloquy</dt>
     <dd>In drama, where a character speaks to themselves, representing their inner thoughts or feelings and in the process relaying them to the audience (but not to other characters.)</dd>
     <dt>monologue</dt>
     <dd>In drama, where a character speaks their thoughts out loud to share them with the audience and any other characters present.</dd>
     <dt>aside</dt>
     <dd>In drama, where a character shares a comment only with the audience for humorous or dramatic effect. This is usually a feeling, thought, or piece of additional background information.</dd>
   </dl>
   #+END_SRC

** Block quotes
   - =<blockquote>= when a section is quoted from somewhere else and
     cite the source's URL.

     #+BEGIN_SRC html
     <p>According to the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote">
     <cite>MDN blockquote page</cite></a>:
     </p>

     <blockquote cite="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote">
     <p>The <strong>HTML <code>&lt;blockquote&gt;</code> Element</strong> (or <em>HTML Block
     Quotation Element</em>) indicates that the enclosed text is an extended quotation.</p>
     </blockquote>

     <!-- Inline quotes -->
     <p>The quote element — <code>&lt;q&gt;</code> — is <q cite="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q">intended
     for short quotations that don't require paragraph breaks.</q> -- <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q">
     <cite>MDN q page</cite></a>.</p>
     #+END_SRC

** Abbreviations
   #+BEGIN_SRC html
   <p>We use <abbr title="Hypertext Markup Language">HTML</abbr> to structure our web documents.</p>
   #+END_SRC

** Address
   - Mark contact details of the author of the HTML document
   #+BEGIN_SRC html
   <address>
       <p>Chris Mills, Manchester, The Grim North, UK</p>
   </address>
   #+END_SRC

** Superscript and subscript
   #+BEGIN_SRC html
   <p>My birthday is on the 25<sup>th</sup> of May 2001.</p>
   <p>Caffeine's chemical formula is C<sub>8</sub>H<sub>10</sub>N<sub>4</sub>O<sub>2</sub>.</p>
   <p>If x<sup>2</sup> is 9, x must equal 3 or -3.</p>
   #+END_SRC

** Computer code
   - <pre><code> could contain blocks of code

   | tag    | purpose                        |
   |--------+--------------------------------|
   | <code> | Generic piece of computer code |
   | <pre>  | Preserve original whitespaces  |
   | <var>  | Variable names                 |
   | <kbd>  | Keyboard/other input           |
   | <samp> | Output of computer program     |
** Date and time
   - Attach an unambiguous, machine-readable time/date.

   #+BEGIN_SRC html
   <!-- Standard simple date -->
   <time datetime="2016-01-20">20 January 2016</time>
   <!-- Just year and month -->
   <time datetime="2016-01">January 2016</time>
   <!-- Just month and day -->
   <time datetime="01-20">20 January</time>
   <!-- Just time, hours and minutes -->
   <time datetime="19:30">19:30</time>
   <!-- You can do seconds and milliseconds too! -->
   <time datetime="19:30:01.856">19:30:01.856</time>
   <!-- Date and time -->
   <time datetime="2016-01-20T19:30">7.30pm, 20 January 2016</time>
   <!-- Date and time with timezone offset-->
   <time datetime="2016-01-20T19:30+01:00">7.30pm, 20 January 2016 is 8.30pm in France</time>
   <!-- Calling out a specific week number-->
   <time datetime="2016-W04">The fourth week of 2016</time>
   #+END_SRC
* Structure
  - Respect semantics and use right element for the right job
** Basic sections
   | tag       | meaning                     |
   |-----------+-----------------------------|
   | <header>  | header                      |
   | <nav>     | navigation bar              |
   | <main>    | main content                |
   | <article> | article (inside main)       |
   | <section> | section (inside main)       |
   | <div>     | division (inside main)      |
   | <aside>   | sidebar (often inside main) |
   | <footer>  | footer                      |

*** main
    - For content unique to this page
    - Once/page
    - directly inside <body>
    - Ideally not nested with other elements.

*** article
    - A block of related content that makes sense on its own.

*** section
    - Grouping together content with same functionality. E.g. minimap
      or a set of article headings, summaries.
    - We can arbitrarily nest articles and sections depending on the context.

*** aside
    - not directly related to main content
    - glossaries, author, bio, links etc

*** header
    - Group of introductory content
    - can be inside main, section etc

*** nav
    - Main navigation functionality of the page

*** footer
    - end content of the page

** Non-semantic wrappers
   - <span> is inline, <div> is block level
   - Keep their usage to minimum.

** Line breaks and horizontal rules
   - =<br>= is the line break
   - =<hr>= draws a horizontal line
* Planning
  - Draw a sitemap: A graph with each node containing title, functionality,
    content and the edges pointing to other nodes.
* Debugging
** Permissive code
   - A piece of code can have syntax errors, logic errors (bugs)
   - HTML is very /permissive/. Browsers have rules to interpret
     incorrect HTML and show even if the result is not what was
     intended. So, /no syntax errors/.

** Validation
   [[https://validator.w3.org/][Markup validation service]]
* Multimedia
** Images
   - Elements like =<img>= and =<video>= are replaced elements
   - No hotlinking
   - No putting copyright images

*** Alternate text
    #+BEGIN_SRC html
    <!-- Using alternate text -->
    <img src="images/dinosaur.jpg"
      alt="The head and torso of a dinosaur skeleton;
           it has a large head with long sharp teeth">
    #+END_SRC

**** Guidelines

     | Purpose of image | Alternate text                                                |
     |------------------+---------------------------------------------------------------|
     | Decoration       | "" (ideally it should be a css background image)              |
     | Content          | Describe the image but no redundancies                        |
     | link             | provide accessible link text inside <a> or <img alt="..."     |
     | text             | No text in images! but if its unavoidable put its text in alt |
*** Width and height
    - Find and set the image width and height
    - Prevents reflows
    - *Do not* alter image size using these attributes
    - Use CSS instead

*** Title
    - Creates a tooltip
    - Not essential

    #+BEGIN_SRC html
    <img src="images/dinosaur.jpg"
     alt="The head and torso of a dinosaur skeleton;
          it has a large head with long sharp teeth"
     width="400"
     height="341"
     title="A t-rex smoking cardboard">
    #+END_SRC

*** Figure
    - Figure is a compact, easy to grasp block that provides essential
      info supporting main text
    - A figure can be image, code snippet, audio, video, equations, table etc

    #+BEGIN_SRC html
    <figure>
      <img src="images/dinosaur.jpg"
           alt="The head and torso of a dinosaur skeleton;
                it has a large head with long sharp teeth"
           width="400"
           height="341">

      <figcaption>A T-Rex on display in the Manchester University Museum.</figcaption>
    </figure>
    #+END_SRC

*** CSS background images
    - Purely for decoration

    #+BEGIN_SRC html
    p {
        background-image: url("images/dinosaur.jpg");
    }
    #+END_SRC

** Video
   - Use online video providers (OVPs) if possible as the bandwidth
     needs are very high.

*** Formats
    - MP3, MP4, WebM are container formats
    - They contain parts like audio track, video track, metadata.
      - WebM is usually Ogg Vorbis audio + VP8/VP9 video (FFx + Chrome)
      - MP4 is often AAC or MP3 audio + H.264 video (IE, Safari)
      - Ogg (older) had Vorbis audio + Ogg Theora video

    - [[https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats#Browser_compatibility][Audio, Video compatibility table]]

    - You can set =preload= to ="none"=, ="auto"= and ="metadata"=.

    #+BEGIN_SRC html
    <video controls width="400" height="400"
        autoplay loop muted
        poster="poster.png">
        <source src="rabbit320.mp4" type="video/mp4">
        <source src="rabbit320.webm" type="video/webm">
        <p>Your browser doesn't support HTML5 video. Here is a <a href="rabbit320.mp4">link to the video</a> instead.</p>
    </video>
    #+END_SRC

** Audio
   - Same except it lacks visual attributes like poster.

** Text tracks
   - Subtitles, captions, timed descriptions
   - Captions: synchronized transcriptions of dialog or significant
     sounds when people can't hear understand.
   - timed descriptions: For visually impaired

   #+BEGIN_SRC
   WEBVTT

   1
   00:00:22.230 --> 00:00:24.606
   This is the first subtitle.

   2
   00:00:30.739 --> 00:00:34.074
   This is the second.

   ...
   #+END_SRC

   #+BEGIN_SRC html
   <video controls>
       <source src="example.mp4" type="video/mp4">
       <source src="example.webm" type="video/webm">
       <track kind="subtitles" src="subtitles_en.vtt" srclang="en">
   </video>
   #+END_SRC
* Embedding anything
** Iframes
   - Allow you to embed other web documents into the current.
   - E.g. Videos, comment systems, maps, ad banners

   #+BEGIN_SRC html
   <iframe src="https://developer.mozilla.org/en-US/docs/Glossary"
           width="100%" height="500" frameborder="0"
           allowfullscreen sandbox>
     <p> <a href="https://developer.mozilla.org/en-US/docs/Glossary">
       Fallback link for browsers that don't support iframes
     </a> </p>
   </iframe>
   #+END_SRC

   - *Speed tip:* set the src of an iframe after the page has loaded
     using js.

*** [[https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#Security_concerns][Security concerns]]
    - Use carefully as it is a common /attack vector/ for hackers.
      - [[https://en.wikipedia.org/wiki/Clickjacking][Clickjacking]]
      - [[https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#Configure_CSP_directives][Configure CSP directives]]
      - Use https: Let's encrypt
      - Sandbox

** Embed and Object
   - Used to embed multiple types of external content like plugin
     based technologies, images, videos and SVG.
   - [[https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#The_case_against_plugins][The case against plugins]]

   #+BEGIN_SRC html
   <embed src="whoosh.swf" quality="medium"
       bgcolor="#ffffff" width="550" height="400"
       name="whoosh" align="middle" allowScriptAccess="sameDomain"
       allowFullScreen="false" type="application/x-shockwave-flash"
       pluginspage="http://www.macromedia.com/go/getflashplayer">

   <object data="mypdf.pdf" type="application/pdf"
       width="800" height="1200" typemustmatch>
       <p>You don't have a PDF plugin, but you can <a href="myfile.pdf">download the PDF file.</a></p>
   </object>
   #+END_SRC

* Vector graphics
** SVG
   - XML based and contains elements for creating shapes, transforms,
     masks, animate etc.
   - Zoom-in indefinitely, smaller size, text is visible to SEO, easy
     to tweak/script/style like code.
   - Also get complicated quickly, harder to create, older browsers
     don't support it. So, use raster images for photos.
   - [[http://tavmjong.free.fr/INKSCAPE/MANUAL/html/Web-Inkscape.html][Preparing SVG for the web]]

   #+BEGIN_SRC xml
   <svg version="1.1"
     baseProfile="full"
     width="300" height="200"
     xmlns="http://www.w3.org/2000/svg">
     <rect width="100%" height="100%" fill="black" />
     <circle cx="150" cy="100" r="90" fill="blue" />
   </svg>
   #+END_SRC

** Adding SVG to pages
*** img
    - familiar, can make it a hyperlink
    - Cannot manipulate with js, non-inline CSS, no pseudoclass styling

    #+BEGIN_SRC html
    <img
        src="equilateral.svg"
        alt="triangle with all three sides equal"
        height="87px"
        width="100px" />

    <!-- Handling Legacy stuff -->
    <img src="equilateral.png" alt="triangle with equal sides" srcset="equilateral.svg">

    background: url("fallback.png") no-repeat center;
    background-image: url("image.svg");
    background-size: contain;
    #+END_SRC

*** svg tag
    - Saves http request, assign classes, ids, SVG presentation
      attribute etc, hyperlinks, pseudoclasses

    - duplication, increases HTML size, not cached with other images,
      write <foreignobject> for old browsers.

    #+BEGIN_SRC html
    <svg width="300" height="200">
        <rect width="100%" height="100%" fill="green" />
    </svg>
    #+END_SRC

*** iframe
    - not a good method
    - cannot use page's js to manipulate what's inside iframe

    #+BEGIN_SRC html
    <iframe src="triangle.svg" width="500" height="500" sandbox>
        <img src="triangle.png" alt="Triangle with three unequal sides" />
    </iframe>
    #+END_SRC

* Responsive Images
  - Art direction problem
  - resolution switching problem

** Resolution switching: Different sizes
   #+BEGIN_SRC html
   <img srcset="elva-fairy-320w.jpg 320w,
             elva-fairy-480w.jpg 480w,
             elva-fairy-800w.jpg 800w"
     sizes="(max-width: 320px) 280px,
            (max-width: 480px) 440px,
            800px"
     src="elva-fairy-800w.jpg" alt="Elva dressed as a fairy">
   #+END_SRC

** Resolution switching: same size different resolutions
   #+BEGIN_SRC html
   <img srcset="elva-fairy-320w.jpg,
             elva-fairy-480w.jpg 1.5x,
             elva-fairy-640w.jpg 2x"
     src="elva-fairy-640w.jpg" alt="Elva dressed as a fairy">

   <!-- CSS -->
   img {
      width: 320px;
   }
   #+END_SRC

** Art direction
   - Show different images to suit different sizes
   - picture element is like audio or video tag.
   - Use media attribute only in art direction. No media contributions
     in sizes attribute.

   #+BEGIN_SRC html
   <picture>
       <source media="(max-width: 799px)" srcset="elva-480w-close-portrait.jpg">
       <source media="(min-width: 800px)" srcset="elva-800w.jpg">
       <img src="elva-800w.jpg" alt="Chris standing up holding his daughter Elva">
   </picture>
   #+END_SRC

** Why not use just CSS or JS
   - browser preloads images while a page is loading before CSS and JS
     are loaded and interpreted. 20% savings!
   - We need srcset because by the time you know the size of <img> you
     will have already loaded a bigger image.

** Newer image formats
   - New formats with low size: webp, jpeg-2000

   #+BEGIN_SRC html
   <picture>
       <source type="image/svg+xml" srcset="pyramid.svg">
       <source type="image/webp" srcset="pyramid.webp">
       <img src="pyramid.png" alt="regular pyramid built from four equilateral triangles">
  </picture>
   #+END_SRC

* Tables
  - Do not use tables for laying out a website. (Use CSS techniques!)
  - tables reduce accessiblity, produce tag soup, not automatically responsive.
  - <table>, <th>, <tr>, <td> tags
** Allowing a cell to span multiple rows and columns
   - use the attributes rowspan and colspan
   #+BEGIN_SRC html
   ...
   <td colspan="2"> Horse </td>
   ...
   #+END_SRC

** Common styling to columns
   - <col> and <colgroup> elements

   #+BEGIN_SRC html
   <table>
     <colgroup>
       <col>
       <col style="background-color: yellow">
     </colgroup>
     <tr>
       <th>Data 1</th>
       <th>Data 2</th>
     </tr>
     <tr>
       <td>Calcutta</td>
       <td>Orange</td>
     </tr>
     <tr>
       <td>Robots</td>
       <td>Jazz</td>
     </tr>
   </table>
   #+END_SRC

** Caption
   - Caption contains a description of the table contents
   #+BEGIN_SRC html
   <table>
       <caption> Dinosaurs in the jurassic perios </caption>
   ...
   </table>
   #+END_SRC

** Adding structure
   - these tags are useful for layout and styling
*** <thead>
    - needs to wrap the part of the table that is the header
*** <tfoot>
    - needs to wrap around the footer of the table. maybe last row or
      last few rows.
*** <tbody>
    - needs to wrap content in parts of the table that aren't in table
      header or footer.
    - It is implicitly present in every table. (Inspect element to
      find out!)

** Nesting tables
   - possible

** Visually impaired users
   - add column and row headers
   - scope attribute
     # #+BEGIN_SRC html
     <thead>
       <tr>
         <th scope="col">Purchase</th>
         <th scope="col">Location</th>
         <th scope="col">Date</th>
         <th scope="col">Evaluation</th>
         <th scope="col">Cost (€)</th>
       </tr>
     </thead>

     <tr>
         <th scope="row">Haircut</th>
         <td>Hairdresser</td>
         <td>12/09</td>
         <td>Great idea</td>
         <td>30</td>
     </tr>
     #+END_SRC

   - id and headers attribute
     - add a unique id to each =<th>=
     - =<td>= has space separated list of all its headers in headers
       attribute.

* Forms
